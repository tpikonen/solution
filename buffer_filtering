#!/usr/bin/env python

import optparse
from outliers import *
from xformats.yamlformats import read_yaml

description="Average repeated buffer measurements by filtering outliers."

usage="%prog [ scans.yaml | -m stack.mat [ stack2.mat ... ] ]"

#default_P = 0.005 # 1/200 = abt. one outlier in 20 reps
default_P = 0.001

def main():
    oprs = optparse.OptionParser(usage=usage, description=description)
    oprs.add_option("-P", "--rejection-probability",
        action="store", type="float", dest="p_reject", default=default_P,
        help="Statistical rejection probability for repetitions drawn from the same distribution. Default is %3g" % default_P)
    oprs.add_option("-n", "--noplot",
        action="store_false", dest="plot", default=True,
        help="Do not plot results for each repetition.")
    oprs.add_option("-m", "--matfiles",
        action="store_true", dest="matfiles", default=False,
        help="Input arguments are matfiles instead of a YAML file.")
    (opts, args) = oprs.parse_args()

    if(len(args) < 1):
        oprs.error("One or more input files are required.")

    if opts.matfiles:
        filenames = args
        for fname in filenames:
            outstem = "buf%s" % fname[:(fname.find('.mat'))]
            filter_matfile(fname, outstem, p_reject=opts.p_reject, plot=opts.plot)
    else:
        if len(args) > 1:
            oprs.error("Only one YAML scan list accepted.")
        scans = read_yaml(args[0])
        scannos = scans.keys()
        scannos.sort()
        for scanno in scannos:
            try:
                bufscan = scans[scanno][0]
            except TypeError:
                print("Scan #%03d is a buffer" % scanno)
                fname = "s%d.mat" % scanno
                outstem = "buf%s" % fname[:(fname.find('.mat'))]
                filter_matfile(fname, outstem, p_reject=opts.p_reject, plot=opts.plot)
                continue
            print("Scan #%03d" % scanno)


if __name__ == "__main__":
    main()
