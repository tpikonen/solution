#!/usr/bin/env python

import sys, re, os
import numpy as np
import matplotlib.pyplot as plt
from optparse import OptionParser
from solution.xformats.yamlformats import read_ydat
from solution.xformats.atsasformats import write_dat


description="Convert YAML-dat format to dat."

usage="%prog [-o <output.dat>] <file.yaml>"


def parse_range(range_str):
    mob = re.match(' *([0-9]+)[-,]([0-9]+) *', range_str)
    if mob is None or len(mob.groups()) != 2:
        raise ValueError("Could not parse range string '%s'" % range_str)
    else:
        return int(mob.group(1)), int(mob.group(2))


def write_yaml2dat(inname, outname, threecols=False, outrange=(0,-1)):
    dat = read_ydat(inname)
    inds = slice(outrange[0], outrange[1])
    if threecols:
        dat = dat[0:3,inds]
    write_dat(dat, outname, comment=inname)


def main():
    oprs = OptionParser(usage=usage, description=description)
    oprs.add_option("-o", "--output",
        action="store", type="string", dest="outfile", default=None,
        help="The output file name. Only one file can be converted if this option is given. The default is to use input file name with the extension '.dat' as the output file name.")
    oprs.add_option("-3", "--three-columns",
        action="store_true", dest="threecols", default=False,
        help="Only write 3 columns to the output file, even if the input has more.")
    oprs.add_option("-r", "--range",
        action="store", type="string", dest="range_str", default=None,
        help="q-index range to use. E.g. '50,1000' or '25-500'")
    (opts, args) = oprs.parse_args()
    if len(args) < 1:
        oprs.error("Missing input file name(s).")
    if opts.outfile is not None and len(args) != 1:
        oprs.error("Only one input argument can be given with explicit output file name.")
    if opts.range_str:
        outrange = parse_range(opts.range_str)
    else:
        outrange = (0, -1)

    if opts.outfile is not None:
        write_yaml2dat(args[0], opts.outfile, opts.threecols, outrange)
    else:
        for inname in args:
            if inname.endswith('.dat'):
                oprs.error("Input file ending with '.dat'. Refusing to continue.")
            outname = re.sub(r'\.[^\. ]*$', '.dat', os.path.basename(inname))
            write_yaml2dat(inname, outname, opts.threecols, outrange)


if __name__ == "__main__":
    main()

